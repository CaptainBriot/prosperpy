import decimal
import unittest

import prosperpy


class TestChandlerExitLong(unittest.TestCase):
    def setUp(self):
        self.candles_data = [('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'),
                             ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'),
                             ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'),
                             ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'),
                             ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'),
                             ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'),
                             ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'), ('68.25', '68.96', '68.96'),
                             ('68.25', '68.96', '68.96'), ('68.45', '68.73', '68.71'), ('68.14', '68.85', '68.80'),
                             ('68.64', '69.06', '68.97'), ('68.30', '69.09', '68.50'), ('68.77', '69.27', '69.04'),
                             ('68.24', '69.18', '68.41'), ('68.06', '68.60', '68.43'), ('67.19', '67.96', '67.86'),
                             ('67.69', '68.24', '68.22'), ('68.09', '68.96', '68.68'), ('68.88', '70.17', '70.01')]
        data = ['66.83', '66.85727272727273', '66.85603305785124', '66.99439519158528', '67.01055904651322',
                '67.18007908985352', '67.14689367667836', '67.16976214592026', '67.09613659383297', '67.11994856684057',
                '67.09904181380236', '67.89453991317498']
        self.data = [decimal.Decimal(item) for item in data]
        self.klass = prosperpy.overlays.ChandelierExitLong

    def get_candles(self):
        candles = []
        for index, item in enumerate(self.candles_data):
            low, high, close = map(decimal.Decimal, item)
            candle = prosperpy.Candle(low=low, high=high, open=decimal.Decimal('0.00'), close=close)

            try:
                candle.previous = candles[index - 1]
            except IndexError:
                pass

            candles.append(candle)

        return candles

    def test_chandler_exit(self):
        candles = self.get_candles()
        period = 22

        chandelier_exit = self.klass(candles[0:period])
        self.assertEqual(chandelier_exit.period, 22)
        self.assertEqual(chandelier_exit.value, self.data[0])

        for candle, value in zip(candles[period:], self.data[1:]):
            chandelier_exit.add(candle)
            self.assertEqual(chandelier_exit.value, value)


class TestChandlerExitShort(TestChandlerExitLong):
    def setUp(self):
        self.candles_data = [('151.40', '152.85', '152.85'), ('151.40', '152.85', '152.85'),
                             ('151.40', '152.85', '152.85'), ('151.40', '152.85', '152.85'),
                             ('151.40', '152.85', '152.85'), ('151.40', '152.85', '152.85'),
                             ('151.40', '152.85', '152.85'), ('151.40', '152.85', '152.85'),
                             ('151.40', '152.85', '152.85'), ('151.40', '152.85', '152.85'),
                             ('151.40', '152.85', '152.85'), ('151.40', '152.85', '152.85'),
                             ('151.40', '152.85', '152.85'), ('151.40', '152.85', '152.85'),
                             ('151.40', '152.85', '152.85'), ('151.40', '152.85', '152.85'),
                             ('151.40', '152.85', '152.85'), ('151.40', '152.85', '152.85'),
                             ('151.40', '152.85', '152.85'), ('151.40', '152.85', '152.85'),
                             ('151.40', '152.85', '152.85'), ('151.40', '152.85', '152.85'),
                             ('154.28', '154.91', '154.72'), ('154.51', '155.62', '155.36'),
                             ('154.22', '154.80', '154.47'), ('154.30', '154.30', '154.67'),
                             ('152.26', '153.31', '152.43'), ('149.92', '152.53', '150.73'),
                             ('149.44', '150.60', '150.29'), ('151.07', '152.96', '152.81'),
                             ('151.60', '152.59', '152.16'), ('152.28', '153.85', '153.34'),
                             ('150.58', '152.71', '150.75')]
        data = ['155.75', '155.8331818181818', '155.7830371900826', '155.7392627723516', '155.5652053736084',
                '155.7045142202625', '154.3847635738870', '153.8777288659830', '154.0401048266201',
                '153.9960091526829', '154.0193723730155', '154.1875827196966']
        self.data = [decimal.Decimal(item) for item in data]
        self.klass = prosperpy.overlays.ChandelierExitShort
